{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","../../../projects/ngneat/hot-toast/src/lib/constants.ts","../../../projects/ngneat/hot-toast/src/lib/hot-toast.model.ts","../projects/ngneat/hot-toast/src/lib/components/hot-toast/hot-toast.component.ts","../../../projects/ngneat/hot-toast/src/lib/utils.ts","../projects/ngneat/hot-toast/src/lib/components/hot-toast-container/hot-toast-container.component.ts","../../../projects/ngneat/hot-toast/src/lib/hot-toast-ref.ts","../../../projects/ngneat/hot-toast/src/lib/hot-toast.service.ts","../projects/ngneat/hot-toast/src/lib/components/animated-icon/animated-icon.component.ts","../esm2015/lib/projects/ngneat/hot-toast/src/lib/components/indicator/icons/checkmark/checkmark.component.ts","../esm2015/lib/projects/ngneat/hot-toast/src/lib/components/indicator/icons/error/error.component.ts","../esm2015/lib/projects/ngneat/hot-toast/src/lib/components/indicator/icons/loader/loader.component.ts","../projects/ngneat/hot-toast/src/lib/components/indicator/indicator.component.ts","../esm2015/lib/projects/ngneat/hot-toast/src/lib/components/indicator/icons/warning/warning.component.ts","../../../projects/ngneat/hot-toast/src/lib/hot-toast.module.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","HOT_TOAST_DEFAULT_TIMEOUTS","blank","success","loading","warning","this","reverseOrder","windowRef","window","ariaLive","role","position","autoClose","theme","isFunction","valOrFunction","resolveValueOrFunction","arg","storage","key","count","enabled","HotToastComponent","offset","height","EventEmitter","beforeClosed","afterClosed","isManualClose","prototype","ngAfterViewInit","_this","nativeElement","toastBarBase","emit","offsetHeight","addEventListener","ev","isExitAnimation","dismissedByAction","id","toast","getPositionStyle","top","includes","verticalStyle","bottom","horizontalStyle","left","right","justifyContent","assign","transform","getToastBarContainerClasses","_a","className","defineProperty","enterAnimation","exitAnimation","duration","animation","style","close","icon","message","ngOnDestroy","animationName","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","Input","Output","ViewChild","HotToastContainerComponent","cdr","toasts","toastRefs","_offsetMargin","subscriptionList","_onClosed","Subject","onClosed$","asObservable","trackById","index","calculateOffset","toastId","visibleToasts","filter","t","visible","findIndex","slice","apply","arguments","length","concat","__spread","defaultConfig","reduce","acc","updateHeight","addToast","ref","subscription","getToast","detectChanges","observable","_d","updateSubscription","dispose","unsubscribe","closeToast","updateMessage","updateToast","options","updateToasts","getAfterClosed","comp","hotToastComponentList","find","item","hasToast","forEach","s","pipe","takeUntil","subscribe","v","observableMessages","type","_b","_c","map","ChangeDetectorRef","ViewChildren","HotToastRef","_dispose","appendTo","container","race","closeData","complete","HotToastService","_viewService","config","_defaultConfig","ToastConfig","_defaultPersistConfig","ToastPersistConfig","init","componentRef","createComponent","setInput","document","body","componentInstance","instance","show","createToast","observe","messages","source","toastRef","tap","val","createOrUpdateToast","updatedOptions","undefined","newOptions","now","Date","toString","isDuplicate","createStorage","createdAt","persist","localStorage","sessionStorage","replace","getItem","parseInt","setItem","Injectable","providedIn","ViewService","decorators","Optional","HotToastModule","service","forRoot","ngModule","providers","provide","useValue","NgModule","declarations","AnimatedIconComponent","IndicatorComponent","CheckMarkComponent","ErrorComponent","LoaderComponent","WarningComponent","imports","CommonModule","DynamicContentModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ToastType } from './hot-toast.model';\n\nexport const HOT_TOAST_DEFAULT_TIMEOUTS: {\n  [key in ToastType]: number;\n} = {\n  blank: 3000,\n  error: 4000,\n  success: 3000,\n  loading: 30000,\n  warning: 4000,\n};\n","import { Content } from '@ngneat/overview';\nimport { Observable } from 'rxjs';\n\nexport class ToastConfig implements DefaultToastOptions {\n  /**\n   * Sets the reverse order for hot-toast stacking\n   *\n   * @default false\n   */\n  reverseOrder = false;\n\n  /**\n   * Sets the window, from which document will be fetched and hot-toasts will be added to there.\n   *\n   * @default window\n   */\n  windowRef = window;\n\n  ariaLive: ToastAriaLive = 'polite';\n  role: ToastRole = 'status';\n  position: ToastPosition = 'top-center';\n  className: string;\n  closeStyle: any;\n  dismissible: boolean;\n  autoClose = true;\n  duration: number;\n  icon: Content;\n  iconTheme: IconTheme;\n  style: any;\n  theme: ToastTheme = 'toast';\n\n  // key in ToastType\n  success?: ToastOptions;\n  error?: ToastOptions;\n  loading?: ToastOptions;\n  blank?: ToastOptions;\n  warning?: ToastOptions;\n}\n\nexport type ToastType = 'success' | 'error' | 'loading' | 'blank' | 'warning';\nexport type ToastPosition = 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\n\nexport type IconTheme = {\n  primary: string;\n  secondary?: string;\n};\n\nexport type ToastTheme = 'toast' | 'snackbar';\n\nexport type ValueFunction<TValue, TArg> = (arg: TArg) => TValue;\nexport type ValueOrFunction<TValue, TArg> = TValue | ValueFunction<TValue, TArg>;\n\nconst isFunction = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>\n): valOrFunction is ValueFunction<TValue, TArg> => typeof valOrFunction === 'function';\n\nexport const resolveValueOrFunction = <TValue, TArg>(valOrFunction: ValueOrFunction<TValue, TArg>, arg: TArg): TValue =>\n  isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction;\n\nexport type ToastRole = 'status' | 'alert';\n\nexport type ToastAriaLive = 'assertive' | 'off' | 'polite';\n\nexport interface Toast {\n  type: ToastType;\n\n  /**\n   * Unique id to associate with hot-toast.\n   * There can't be multiple hot-toasts opened with same id.\n   *\n   * @default Date.now().toString()\n   */\n  id: string;\n\n  /** The message to show in the hot-toast. */\n  message: Content;\n\n  /**\n   * Role of the live region.\n   *\n   * @default status\n   */\n  role: ToastRole;\n\n  /** aria-live value for the live region.\n   *\n   * @default polite\n   */\n  ariaLive: ToastAriaLive;\n\n  /**Icon to show in the hot-toast */\n  icon?: Content;\n\n  /**\n   * Duration in milliseconds after which hot-toast will be auto closed.\n   * Can be disabled via `autoClose: false`\n   *\n   * @default 3000 | error = 4000 | loading = 30000\n   */\n  duration?: number;\n\n  /**\n   * Show close button in hot-toast\n   *\n   * @default false\n   */\n  dismissible?: boolean;\n\n  /**\n   * Auto close hot-toast after duration\n   *\n   * @default true\n   */\n  autoClose?: boolean;\n\n  /**Extra styles to apply for hot-toast */\n  style?: any;\n\n  /**Extra CSS classes to be added to the hot toast container. */\n  className?: string;\n\n  /**Use this to change icon color */\n  iconTheme?: IconTheme;\n\n  /**\n   * Visual appearance of hot-toast\n   *\n   * @default toast\n   */\n  theme?: ToastTheme;\n\n  /**\n   * The position to place the hot-toast.\n   *\n   *  @default top-center\n   */\n  position?: ToastPosition;\n\n  /**Extra styles to apply for close button */\n  closeStyle?: any;\n\n  createdAt: number;\n  visible: boolean;\n  height?: number;\n\n  /**Observable to which subscription will happen and messages will be displayed according to observableMessages */\n  observable?: Observable<unknown>;\n  observableMessages?: ObservableMessages<unknown>;\n\n  /**\n   * Useful when you want to keep a persistance for toast based on ids, across sessions.\n   *\n   * @example\n   * // Lets say you want show hot-toast, with a particular id,\n   * // max 3 times to a user irrespective of browser session.\n   * // In this case you will set this as:\n   * { enabled: true, count: 3 }\n   *\n   * @type {ToastPersistConfig}\n   */\n  persist?: ToastPersistConfig;\n}\n\nexport type ToastOptions = Partial<\n  Pick<\n    Toast,\n    | 'id'\n    | 'icon'\n    | 'duration'\n    | 'dismissible'\n    | 'autoClose'\n    | 'role'\n    | 'ariaLive'\n    | 'className'\n    | 'style'\n    | 'iconTheme'\n    | 'theme'\n    | 'position'\n    | 'closeStyle'\n    | 'persist'\n  >\n>;\n\nexport type DefaultToastOptions = ToastOptions &\n  {\n    [key in ToastType]?: ToastOptions;\n  };\n\nexport type ObservableMessages<T> = {\n  loading?: Content;\n  next: ValueOrFunction<Content, T>;\n  error?: ValueOrFunction<Content, any>;\n};\n\nexport interface HotToastServiceMethods {\n  show(message: Content, options?: ToastOptions): CreateHotToastRef;\n  error(message: Content, options?: ToastOptions): CreateHotToastRef;\n  success(message: Content, options?: ToastOptions): CreateHotToastRef;\n  loading(message: Content, options?: ToastOptions): CreateHotToastRef;\n  warning(message: Content, options?: ToastOptions): CreateHotToastRef;\n  observe<T>(messages: ObservableMessages<T>, options?: ToastOptions): (source: Observable<T>) => Observable<T>;\n  close(id: string): void;\n}\n\nexport type UpdateToastOptions = Partial<\n  Pick<\n    Toast,\n    'icon' | 'duration' | 'dismissible' | 'className' | 'style' | 'iconTheme' | 'type' | 'theme' | 'closeStyle'\n  >\n>;\n\nexport interface HotToastRefProps {\n  /** Returns all the toast options */\n  getToast: () => Toast;\n  dispose: () => void;\n  /**Updates only message */\n  updateMessage: (message: Content) => void;\n  /**Update updatable options of toast */\n  updateToast: (options: UpdateToastOptions) => void;\n  /** Observable for notifying the user that the toast has been closed. */\n  afterClosed: Observable<HotToastClose>;\n  /**Closes the toast */\n  close: (closeData?: { dismissedByAction?: boolean }) => void;\n}\n\n/** Event that is emitted when a snack bar is dismissed. */\nexport interface HotToastClose {\n  /** Whether the snack bar was dismissed using the action button. */\n  dismissedByAction: boolean;\n  id: string;\n}\n\nexport class ToastPersistConfig {\n  /**\n   *In which storage id vs. counts should be stored\n   *\n   * @type {('local' | 'session')}\n   * @memberof ToastPersistConfig\n   * @default 'local'\n   */\n  storage?: 'local' | 'session' = 'local';\n\n  /**\n   *The key pattern to store object in storage. `${id}` in pattern is replaced with actual toast id.\n   *\n   * @type {('local' | 'session')}\n   * @memberof ToastPersistConfig\n   * @default 'ngneat/hottoast-${id}'\n   */\n  key?: string = 'ngneat/hototast-${id}';\n\n  /**\n   *The number of toasts allowed to show.\n   *\n   * @memberof ToastPersistConfig\n   * @default 1\n   */\n  count? = 1;\n\n  enabled = false;\n}\n\nexport type AddToastRef = Omit<Omit<HotToastRefProps, 'close'>, 'getToast'>;\n\nexport type CreateHotToastRef = Omit<Omit<HotToastRefProps, 'appendTo'>, 'dispose'>;\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { CreateHotToastRef, HotToastClose, Toast, ToastConfig } from '../../hot-toast.model';\nimport { animate } from '../../utils';\n\n@Component({\n  selector: 'hot-toast',\n  templateUrl: 'hot-toast.component.html',\n  styleUrls: ['./hot-toast.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HotToastComponent implements AfterViewInit, OnDestroy {\n  @Input() toast: Toast;\n  @Input() offset = 0;\n  @Input() defaultConfig: ToastConfig;\n  @Input() toastRef: CreateHotToastRef;\n\n  @Output() height = new EventEmitter<number>();\n  @Output() beforeClosed = new EventEmitter();\n  @Output() afterClosed = new EventEmitter<HotToastClose>();\n\n  @ViewChild('hotToastBarBase') private toastBarBase: ElementRef<HTMLElement>;\n\n  isManualClose = false;\n\n  ngAfterViewInit() {\n    const nativeElement = this.toastBarBase.nativeElement;\n    this.height.emit(nativeElement.offsetHeight);\n\n    nativeElement.addEventListener('animationstart', (ev: AnimationEvent) => {\n      if (this.isExitAnimation(ev)) {\n        this.beforeClosed.emit();\n      }\n    });\n    nativeElement.addEventListener('animationend', (ev: AnimationEvent) => {\n      if (this.isExitAnimation(ev)) {\n        this.afterClosed.emit({ dismissedByAction: this.isManualClose, id: this.toast.id });\n      }\n    });\n  }\n\n  getPositionStyle() {\n    const top = this.toast.position.includes('top');\n    const verticalStyle = top ? { top: 0 } : { bottom: 0 };\n\n    const horizontalStyle = this.toast.position.includes('left')\n      ? {\n          left: 0,\n        }\n      : this.toast.position.includes('right')\n      ? {\n          right: 0,\n        }\n      : {\n          left: 0,\n          right: 0,\n          justifyContent: 'center',\n        };\n    return {\n      transform: `translateY(${this.offset * (top ? 1 : -1)}px)`,\n      ...verticalStyle,\n      ...horizontalStyle,\n    };\n  }\n\n  getToastBarContainerClasses() {\n    return (this.toast.className ?? ' ') + this.toast.theme;\n  }\n\n  get toastBarBaseStyles() {\n    const top = this.toast.position.includes('top');\n\n    const enterAnimation = `hotToastEnterAnimation${\n      top ? 'Negative' : 'Positive'\n    } 0.35s cubic-bezier(0.21, 1.02, 0.73, 1) forwards`;\n\n    const exitAnimation = `hotToastExitAnimation${\n      top ? 'Negative' : 'Positive'\n    } 0.8s forwards cubic-bezier(0.06, 0.71, 0.55, 1) ${this.toast.duration}ms`;\n\n    const animation = this.toast.autoClose ? `${enterAnimation}, ${exitAnimation}` : enterAnimation;\n\n    return { ...this.toast.style, animation };\n  }\n\n  close() {\n    this.isManualClose = true;\n    const top = this.toast.position.includes('top');\n\n    const exitAnimation = `hotToastExitAnimation${\n      top ? 'Negative' : 'Positive'\n    } 0.8s forwards cubic-bezier(0.06, 0.71, 0.55, 1)`;\n\n    const nativeElement = this.toastBarBase.nativeElement;\n\n    animate(nativeElement, exitAnimation);\n  }\n\n  get isIconString() {\n    return typeof this.toast.icon === 'string';\n  }\n\n  get isMessageString() {\n    return typeof this.toast.message === 'string';\n  }\n\n  ngOnDestroy() {\n    this.close();\n  }\n\n  private isExitAnimation(ev: AnimationEvent) {\n    return ev.animationName.includes('hotToastExitAnimation');\n  }\n}\n","export const animate = (element: HTMLElement, value: string) => {\n  element.style.animation = value;\n};\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Input, OnDestroy, QueryList, ViewChildren } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { HOT_TOAST_DEFAULT_TIMEOUTS } from '../../constants';\nimport {\n  DefaultToastOptions,\n  HotToastClose,\n  resolveValueOrFunction,\n  Toast,\n  ToastConfig,\n  ToastPosition,\n  UpdateToastOptions,\n  AddToastRef,\n  CreateHotToastRef,\n} from '../../hot-toast.model';\nimport { HotToastRef } from '../../hot-toast-ref';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Content } from '@ngneat/overview';\nimport { HotToastComponent } from '../hot-toast/hot-toast.component';\n\n@Component({\n  selector: 'hot-toast-container',\n  templateUrl: './hot-toast-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HotToastContainerComponent implements OnDestroy {\n  @Input() defaultConfig: ToastConfig;\n\n  @ViewChildren(HotToastComponent) hotToastComponentList: QueryList<HotToastComponent>;\n\n  toasts: Toast[] = [];\n  toastRefs: CreateHotToastRef[] = [];\n\n  private readonly _offsetMargin = 8;\n\n  private subscriptionList: Subscription[] = [];\n\n  /** Subject for notifying the user that the toast has been closed. */\n  private _onClosed = new Subject<HotToastClose>();\n\n  private onClosed$ = this._onClosed.asObservable();\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  trackById(index: number, toast: Toast) {\n    return toast.id;\n  }\n\n  calculateOffset(toastId: string, position: ToastPosition) {\n    const visibleToasts = this.toasts.filter((t) => t.visible && t.position === position);\n    const index = visibleToasts.findIndex((toast) => toast.id === toastId);\n    const offset =\n      index !== -1\n        ? visibleToasts\n            .slice(...(this.defaultConfig.reverseOrder ? [index + 1] : [0, index]))\n            .reduce((acc, t) => acc + (t.height || 0) + this._offsetMargin, 0)\n        : 0;\n    return offset;\n  }\n\n  updateHeight(height: number, toast: Toast) {\n    toast.height = height;\n  }\n\n  addToast(ref: HotToastRef): AddToastRef {\n    this.toastRefs.push(ref);\n\n    let toast = ref.getToast();\n    let subscription: Subscription;\n\n    this.toasts.push(ref.getToast());\n\n    this.cdr.detectChanges();\n\n    if (toast.observable) {\n      ({ toast, subscription } = this.updateSubscription(toast, subscription));\n      this.subscriptionList.push(subscription);\n    }\n\n    return {\n      dispose: () => {\n        if (subscription) {\n          subscription.unsubscribe();\n        }\n\n        this.closeToast(toast.id);\n      },\n      updateMessage: (message: Content) => {\n        toast.message = message;\n        this.cdr.detectChanges();\n      },\n      updateToast: (options: UpdateToastOptions) => {\n        this.updateToasts(toast, options);\n        this.cdr.detectChanges();\n      },\n      afterClosed: this.getAfterClosed(toast),\n    };\n  }\n\n  closeToast(id: string) {\n    const comp = this.hotToastComponentList.find((item) => item.toast.id === id);\n    if (comp) {\n      comp.close();\n    }\n  }\n\n  beforeClosed(toast: Toast) {\n    toast.visible = false;\n  }\n\n  afterClosed(closeToast: HotToastClose) {\n    const toastIndex = this.toasts.findIndex((t) => t.id === closeToast.id);\n    if (toastIndex > -1) {\n      this._onClosed.next(closeToast);\n      this.toasts = this.toasts.filter((t) => t.id !== closeToast.id);\n      this.toastRefs = this.toastRefs.filter((t) => t.getToast().id !== closeToast.id);\n      this.cdr.detectChanges();\n    }\n  }\n\n  hasToast(id: string) {\n    return this.toasts.findIndex((t) => t.id === id) > -1;\n  }\n\n  ngOnDestroy() {\n    this.subscriptionList.forEach((s) => s.unsubscribe());\n  }\n\n  private updateSubscription(toast: Toast, subscription: Subscription) {\n    subscription = toast.observable.pipe(takeUntil(this.getAfterClosed(toast))).subscribe(\n      (v) => {\n        if (toast.observableMessages?.next) {\n          toast.message = resolveValueOrFunction(toast.observableMessages.next, v);\n          toast = Object.assign(toast, {\n            ...toast,\n            type: 'success',\n            duration: HOT_TOAST_DEFAULT_TIMEOUTS.success,\n            ...this.defaultConfig?.success,\n            ...(toast as DefaultToastOptions)?.success,\n          });\n          this.updateToasts(toast);\n          this.cdr.detectChanges();\n        }\n      },\n      (e) => {\n        if (toast.observableMessages?.error) {\n          toast.message = resolveValueOrFunction(toast.observableMessages.error, e);\n          toast = Object.assign(toast, {\n            ...toast,\n            type: 'error',\n            duration: HOT_TOAST_DEFAULT_TIMEOUTS.error,\n            ...this.defaultConfig?.error,\n            ...(toast as DefaultToastOptions)?.error,\n          });\n          this.updateToasts(toast);\n          this.cdr.detectChanges();\n        }\n      }\n    );\n    return { toast, subscription };\n  }\n\n  private getAfterClosed(toast: Toast) {\n    return this.onClosed$.pipe(filter((v) => v.id === toast.id));\n  }\n\n  private updateToasts(toast: Toast, options?: UpdateToastOptions) {\n    this.toasts = this.toasts.map((t) => ({ ...t, ...(t.id === toast.id && { ...toast, ...options }) }));\n  }\n}\n","import { Content } from '@ngneat/overview';\nimport { Observable, race, Subject } from 'rxjs';\nimport { HotToastContainerComponent } from './components/hot-toast-container/hot-toast-container.component';\nimport { HotToastClose, Toast, UpdateToastOptions, HotToastRefProps } from './hot-toast.model';\n\nexport class HotToastRef implements HotToastRefProps {\n  updateMessage: (message: Content) => void;\n  updateToast: (options: UpdateToastOptions) => void;\n  afterClosed: Observable<HotToastClose>;\n\n  private _dispose: () => void;\n  set dispose(value: () => void) {\n    this._dispose = value;\n  }\n\n  /** Subject for notifying the user that the toast has been closed. */\n  private _onClosed = new Subject<HotToastClose>();\n\n  constructor(private toast: Toast) {}\n\n  getToast() {\n    return this.toast;\n  }\n\n  /**Used for internal purpose\n   * Attach ToastRef to container\n   */\n  appendTo(container: HotToastContainerComponent) {\n    const { dispose, updateMessage, updateToast, afterClosed } = container.addToast(this);\n\n    this.dispose = dispose;\n    this.updateMessage = updateMessage;\n    this.updateToast = updateToast;\n    this.afterClosed = race(this._onClosed.asObservable(), afterClosed);\n    return this;\n  }\n\n  /**\n   * Closes the toast\n   *\n   * @param [closeData={ dismissedByAction: false }] -\n   * Make sure to pass { dismissedByAction: true } when closing from template\n   * @memberof HotToastRef\n   */\n  close(closeData: { dismissedByAction: boolean } = { dismissedByAction: false }) {\n    this._dispose();\n    this._onClosed.next({ dismissedByAction: closeData.dismissedByAction, id: this.toast.id });\n    this._onClosed.complete();\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Content, ViewService } from '@ngneat/overview';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { HotToastContainerComponent } from './components/hot-toast-container/hot-toast-container.component';\nimport { HOT_TOAST_DEFAULT_TIMEOUTS } from './constants';\nimport { HotToastRef } from './hot-toast-ref';\nimport {\n  CreateHotToastRef,\n  DefaultToastOptions,\n  HotToastServiceMethods,\n  ObservableMessages,\n  resolveValueOrFunction,\n  Toast,\n  ToastConfig,\n  ToastOptions,\n  ToastPersistConfig,\n  ToastType,\n  UpdateToastOptions,\n} from './hot-toast.model';\n\n@Injectable({ providedIn: 'root' })\nexport class HotToastService implements HotToastServiceMethods {\n  componentInstance: HotToastContainerComponent;\n\n  private _defaultConfig = new ToastConfig();\n  private _defaultPersistConfig = new ToastPersistConfig();\n\n  constructor(private _viewService: ViewService, @Optional() config: ToastConfig) {\n    if (config) {\n      this._defaultConfig = {\n        ...this._defaultConfig,\n        ...config,\n      };\n    }\n  }\n\n  /**\n   * Used for internal purpose only.\n   * Creates a container component and attaches it to document.body.\n   */\n  init() {\n    const componentRef = this._viewService\n      .createComponent(HotToastContainerComponent)\n      .setInput('defaultConfig', this._defaultConfig)\n      .appendTo(this._defaultConfig.windowRef.document.body);\n\n    this.componentInstance = componentRef.ref.instance;\n  }\n\n  /**\n   * Opens up an hot-toast without any pre-configurations\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  show(message: Content, options?: ToastOptions): CreateHotToastRef {\n    const toast = this.createToast(message, 'blank', { ...this._defaultConfig, ...options });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for error state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  error(message: Content, options?: ToastOptions): CreateHotToastRef {\n    const toast = this.createToast(message, 'error', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.error,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for success state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  success(message: Content, options?: ToastOptions): CreateHotToastRef {\n    const toast = this.createToast(message, 'success', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.success,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for loading state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  loading(message: Content, options?: ToastOptions): CreateHotToastRef {\n    const toast = this.createToast(message, 'loading', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.loading,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for warning state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  warning(message: Content, options?: ToastOptions): CreateHotToastRef {\n    const toast = this.createToast(message, 'warning', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.warning,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   *\n   *  Opens up an hot-toast with pre-configurations for loading initially and then changes state based on messages\n   *\n   * @template T T\n   * @param messages Messages for each state i.e. loading, next and error\n   * @param [options] Additional configuration options for the hot-toast.\n   * @param observable Observable to which subscription will happen and messages will be displayed according to messages\n   * @returns\n   * @memberof HotToastService\n   */\n  observe<T>(messages: ObservableMessages<T>, options?: DefaultToastOptions): (source: Observable<T>) => Observable<T> {\n    return (source) => {\n      let toastRef: CreateHotToastRef;\n      if (messages.loading) {\n        toastRef = this.createToast(messages.loading, 'loading', {\n          ...this._defaultConfig,\n          ...this._defaultConfig?.loading,\n          ...options,\n          ...options?.loading,\n        });\n      }\n\n      return source.pipe(\n        tap({\n          next: (val) => {\n            if (messages.next) {\n              toastRef = this.createOrUpdateToast(messages, val, toastRef, options, 'success');\n            }\n          },\n          error: (e) => {\n            if (messages.error) {\n              toastRef = this.createOrUpdateToast(messages, e, toastRef, options, 'error');\n            }\n          },\n        })\n      );\n    };\n  }\n\n  /**\n   * Closes the hot-toast\n   *\n   * @param id - ID of the toast\n   */\n  close(id: string) {\n    this.componentInstance.closeToast(id);\n  }\n\n  private createOrUpdateToast<T>(\n    messages: ObservableMessages<T>,\n    val: unknown,\n    toastRef: CreateHotToastRef,\n    options: DefaultToastOptions,\n    type: ToastType\n  ) {\n    const message = resolveValueOrFunction(messages[type === 'success' ? 'next' : 'error'], val);\n    if (toastRef) {\n      toastRef.updateMessage(message);\n      const updatedOptions: UpdateToastOptions = {\n        ...toastRef.getToast(),\n        type,\n        duration: HOT_TOAST_DEFAULT_TIMEOUTS[type],\n        ...(this._defaultConfig[type] ?? undefined),\n        ...((toastRef.getToast() as DefaultToastOptions)[type] ?? {}),\n      };\n      toastRef.updateToast(updatedOptions);\n    } else {\n      const newOptions = {\n        ...this._defaultConfig,\n        ...(this._defaultConfig[type] ?? undefined),\n        ...options,\n        ...(options && options[type] ? options[type] : undefined),\n      };\n      this.createToast(message, type, newOptions);\n    }\n    return toastRef;\n  }\n\n  private createToast<T>(\n    message: Content,\n    type: ToastType,\n    options?: DefaultToastOptions,\n    observable?: Observable<T>,\n    observableMessages?: ObservableMessages<T>\n  ): CreateHotToastRef {\n    const now = Date.now();\n\n    const id = options?.id ?? now.toString();\n\n    if (!this.isDuplicate(id) && this.createStorage(id, options)) {\n      const toast: Toast = {\n        ariaLive: options?.ariaLive ?? 'polite',\n        createdAt: now,\n        duration: options?.duration ?? HOT_TOAST_DEFAULT_TIMEOUTS[type],\n        id,\n        message,\n        role: options?.role ?? 'status',\n        type,\n        visible: true,\n        observable: observable ?? undefined,\n        observableMessages: observableMessages ?? undefined,\n        ...options,\n      };\n\n      return new HotToastRef(toast).appendTo(this.componentInstance);\n    }\n  }\n\n  private isDuplicate(id: string) {\n    return this.componentInstance.hasToast(id);\n  }\n\n  /**\n   * Creates an entry in local or session storage with count ${defaultConfig.persist.count}, if not present.\n   * If present in storage, reduces the count\n   * and returns the count.\n   * Count can not be less than 0.\n   */\n  private createStorage(id: string, options: DefaultToastOptions): number {\n    let count = 1;\n    if (options.persist?.enabled) {\n      const persist = { ...this._defaultPersistConfig, ...options.persist };\n      const storage: Storage = persist.storage === 'local' ? localStorage : sessionStorage;\n      const key = persist.key.replace(/\\${id}/g, id);\n\n      let item: string | number = storage.getItem(key);\n\n      if (item) {\n        item = parseInt(item, 10);\n        if (item > 0) {\n          count = item - 1;\n        } else {\n          count = item;\n        }\n      } else {\n        count = persist.count;\n      }\n\n      storage.setItem(key, count.toString());\n    }\n\n    return count;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-animated-icon',\n  templateUrl: './animated-icon.component.html',\n  styleUrls: ['./animated-icon.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AnimatedIconComponent {\n  @Input() iconTheme: IconTheme;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-checkmark',\n  templateUrl: './checkmark.component.html',\n  styleUrls: ['./checkmark.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckMarkComponent {\n  @Input() theme: IconTheme;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ErrorComponent {\n  @Input() theme: IconTheme;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoaderComponent {\n  @Input() theme: IconTheme;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme, ToastType } from '../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-indicator',\n  templateUrl: 'indicator.component.html',\n  styleUrls: ['./indicator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IndicatorComponent {\n  @Input() theme: IconTheme;\n  @Input() type: ToastType;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-warning',\n  templateUrl: './warning.component.html',\n  styleUrls: ['./warning.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WarningComponent {\n  @Input() theme: IconTheme;\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { DynamicContentModule } from '@ngneat/overview';\n\nimport { AnimatedIconComponent } from './components/animated-icon/animated-icon.component';\nimport { HotToastComponent } from './components/hot-toast/hot-toast.component';\nimport { CheckMarkComponent } from './components/indicator/icons/checkmark/checkmark.component';\nimport { ErrorComponent } from './components/indicator/icons/error/error.component';\nimport { LoaderComponent } from './components/indicator/icons/loader/loader.component';\nimport { IndicatorComponent } from './components/indicator/indicator.component';\nimport { ToastConfig } from './hot-toast.model';\nimport { HotToastContainerComponent } from './components/hot-toast-container/hot-toast-container.component';\nimport { HotToastService } from './hot-toast.service';\nimport { WarningComponent } from './components/indicator/icons/warning/warning.component';\n\n@NgModule({\n  declarations: [\n    HotToastContainerComponent,\n    HotToastComponent,\n    AnimatedIconComponent,\n    IndicatorComponent,\n    CheckMarkComponent,\n    ErrorComponent,\n    LoaderComponent,\n    WarningComponent,\n  ],\n  imports: [CommonModule, DynamicContentModule],\n})\nexport class HotToastModule {\n  constructor(service: HotToastService) {\n    service.init();\n  }\n\n  static forRoot(config?: Partial<ToastConfig>): ModuleWithProviders<HotToastModule> {\n    return {\n      ngModule: HotToastModule,\n      providers: [{ provide: ToastConfig, useValue: config }],\n    };\n  }\n}\n"]}