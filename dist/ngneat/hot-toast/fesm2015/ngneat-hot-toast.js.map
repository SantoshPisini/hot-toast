{"version":3,"file":"ngneat-hot-toast.js","sources":["../../../projects/ngneat/hot-toast/src/lib/constants.ts","../../../projects/ngneat/hot-toast/src/lib/hot-toast.model.ts","../../../projects/ngneat/hot-toast/src/lib/utils.ts","../projects/ngneat/hot-toast/src/lib/components/hot-toast/hot-toast.component.ts","../projects/ngneat/hot-toast/src/lib/components/hot-toast-container/hot-toast-container.component.ts","../../../projects/ngneat/hot-toast/src/lib/hot-toast-ref.ts","../../../projects/ngneat/hot-toast/src/lib/hot-toast.service.ts","../projects/ngneat/hot-toast/src/lib/components/animated-icon/animated-icon.component.ts","../esm2015/lib/projects/ngneat/hot-toast/src/lib/components/indicator/icons/checkmark/checkmark.component.ts","../esm2015/lib/projects/ngneat/hot-toast/src/lib/components/indicator/icons/error/error.component.ts","../esm2015/lib/projects/ngneat/hot-toast/src/lib/components/indicator/icons/loader/loader.component.ts","../projects/ngneat/hot-toast/src/lib/components/indicator/indicator.component.ts","../esm2015/lib/projects/ngneat/hot-toast/src/lib/components/indicator/icons/warning/warning.component.ts","../../../projects/ngneat/hot-toast/src/lib/hot-toast.module.ts","../../../../projects/ngneat/hot-toast/src/public-api.ts","../../../../projects/ngneat/hot-toast/src/ngneat-hot-toast.ts"],"sourcesContent":["import { ToastType } from './hot-toast.model';\n\nexport const HOT_TOAST_DEFAULT_TIMEOUTS: {\n  [key in ToastType]: number;\n} = {\n  blank: 3000,\n  error: 4000,\n  success: 3000,\n  loading: 30000,\n  warning: 4000,\n};\n","import { Content } from '@ngneat/overview';\nimport { Observable } from 'rxjs';\n\nexport class ToastConfig implements DefaultToastOptions {\n  /**\n   * Sets the reverse order for hot-toast stacking\n   *\n   * @default false\n   */\n  reverseOrder = false;\n\n  /**\n   * Sets the window, from which document will be fetched and hot-toasts will be added to there.\n   *\n   * @default window\n   */\n  windowRef = window;\n\n  ariaLive: ToastAriaLive = 'polite';\n  role: ToastRole = 'status';\n  position: ToastPosition = 'top-center';\n  className: string;\n  closeStyle: any;\n  dismissible: boolean;\n  autoClose = true;\n  duration: number;\n  icon: Content;\n  iconTheme: IconTheme;\n  style: any;\n  theme: ToastTheme = 'toast';\n\n  // key in ToastType\n  success?: ToastOptions;\n  error?: ToastOptions;\n  loading?: ToastOptions;\n  blank?: ToastOptions;\n  warning?: ToastOptions;\n}\n\nexport type ToastType = 'success' | 'error' | 'loading' | 'blank' | 'warning';\nexport type ToastPosition = 'top-left' | 'top-center' | 'top-right' | 'bottom-left' | 'bottom-center' | 'bottom-right';\n\nexport type IconTheme = {\n  primary: string;\n  secondary?: string;\n};\n\nexport type ToastTheme = 'toast' | 'snackbar';\n\nexport type ValueFunction<TValue, TArg> = (arg: TArg) => TValue;\nexport type ValueOrFunction<TValue, TArg> = TValue | ValueFunction<TValue, TArg>;\n\nconst isFunction = <TValue, TArg>(\n  valOrFunction: ValueOrFunction<TValue, TArg>\n): valOrFunction is ValueFunction<TValue, TArg> => typeof valOrFunction === 'function';\n\nexport const resolveValueOrFunction = <TValue, TArg>(valOrFunction: ValueOrFunction<TValue, TArg>, arg: TArg): TValue =>\n  isFunction(valOrFunction) ? valOrFunction(arg) : valOrFunction;\n\nexport type ToastRole = 'status' | 'alert';\n\nexport type ToastAriaLive = 'assertive' | 'off' | 'polite';\n\nexport interface Toast {\n  type: ToastType;\n\n  /**\n   * Unique id to associate with hot-toast.\n   * There can't be multiple hot-toasts opened with same id.\n   *\n   * @default Date.now().toString()\n   */\n  id: string;\n\n  /** The message to show in the hot-toast. */\n  message: Content;\n\n  /**\n   * Role of the live region.\n   *\n   * @default status\n   */\n  role: ToastRole;\n\n  /** aria-live value for the live region.\n   *\n   * @default polite\n   */\n  ariaLive: ToastAriaLive;\n\n  /**Icon to show in the hot-toast */\n  icon?: Content;\n\n  /**\n   * Duration in milliseconds after which hot-toast will be auto closed.\n   * Can be disabled via `autoClose: false`\n   *\n   * @default 3000 | error = 4000 | loading = 30000\n   */\n  duration?: number;\n\n  /**\n   * Show close button in hot-toast\n   *\n   * @default false\n   */\n  dismissible?: boolean;\n\n  /**\n   * Auto close hot-toast after duration\n   *\n   * @default true\n   */\n  autoClose?: boolean;\n\n  /**Extra styles to apply for hot-toast */\n  style?: any;\n\n  /**Extra CSS classes to be added to the hot toast container. */\n  className?: string;\n\n  /**Use this to change icon color */\n  iconTheme?: IconTheme;\n\n  /**\n   * Visual appearance of hot-toast\n   *\n   * @default toast\n   */\n  theme?: ToastTheme;\n\n  /**\n   * The position to place the hot-toast.\n   *\n   *  @default top-center\n   */\n  position?: ToastPosition;\n\n  /**Extra styles to apply for close button */\n  closeStyle?: any;\n\n  createdAt: number;\n  visible: boolean;\n  height?: number;\n\n  /**Observable to which subscription will happen and messages will be displayed according to observableMessages */\n  observable?: Observable<unknown>;\n  observableMessages?: ObservableMessages<unknown>;\n\n  /**\n   * Useful when you want to keep a persistance for toast based on ids, across sessions.\n   *\n   * @example\n   * // Lets say you want show hot-toast, with a particular id,\n   * // max 3 times to a user irrespective of browser session.\n   * // In this case you will set this as:\n   * { enabled: true, count: 3 }\n   *\n   * @type {ToastPersistConfig}\n   */\n  persist?: ToastPersistConfig;\n}\n\nexport type ToastOptions = Partial<\n  Pick<\n    Toast,\n    | 'id'\n    | 'icon'\n    | 'duration'\n    | 'dismissible'\n    | 'autoClose'\n    | 'role'\n    | 'ariaLive'\n    | 'className'\n    | 'style'\n    | 'iconTheme'\n    | 'theme'\n    | 'position'\n    | 'closeStyle'\n    | 'persist'\n  >\n>;\n\nexport type DefaultToastOptions = ToastOptions &\n  {\n    [key in ToastType]?: ToastOptions;\n  };\n\nexport type ObservableMessages<T> = {\n  loading?: Content;\n  next: ValueOrFunction<Content, T>;\n  error?: ValueOrFunction<Content, any>;\n};\n\nexport interface HotToastServiceMethods {\n  show(message: Content, options?: ToastOptions): CreateHotToastRef;\n  error(message: Content, options?: ToastOptions): CreateHotToastRef;\n  success(message: Content, options?: ToastOptions): CreateHotToastRef;\n  loading(message: Content, options?: ToastOptions): CreateHotToastRef;\n  warning(message: Content, options?: ToastOptions): CreateHotToastRef;\n  observe<T>(messages: ObservableMessages<T>, options?: ToastOptions): (source: Observable<T>) => Observable<T>;\n  close(id: string): void;\n}\n\nexport type UpdateToastOptions = Partial<\n  Pick<\n    Toast,\n    'icon' | 'duration' | 'dismissible' | 'className' | 'style' | 'iconTheme' | 'type' | 'theme' | 'closeStyle'\n  >\n>;\n\nexport interface HotToastRefProps {\n  /** Returns all the toast options */\n  getToast: () => Toast;\n  dispose: () => void;\n  /**Updates only message */\n  updateMessage: (message: Content) => void;\n  /**Update updatable options of toast */\n  updateToast: (options: UpdateToastOptions) => void;\n  /** Observable for notifying the user that the toast has been closed. */\n  afterClosed: Observable<HotToastClose>;\n  /**Closes the toast */\n  close: (closeData?: { dismissedByAction?: boolean }) => void;\n}\n\n/** Event that is emitted when a snack bar is dismissed. */\nexport interface HotToastClose {\n  /** Whether the snack bar was dismissed using the action button. */\n  dismissedByAction: boolean;\n  id: string;\n}\n\nexport class ToastPersistConfig {\n  /**\n   *In which storage id vs. counts should be stored\n   *\n   * @type {('local' | 'session')}\n   * @memberof ToastPersistConfig\n   * @default 'local'\n   */\n  storage?: 'local' | 'session' = 'local';\n\n  /**\n   *The key pattern to store object in storage. `${id}` in pattern is replaced with actual toast id.\n   *\n   * @type {('local' | 'session')}\n   * @memberof ToastPersistConfig\n   * @default 'ngneat/hottoast-${id}'\n   */\n  key?: string = 'ngneat/hototast-${id}';\n\n  /**\n   *The number of toasts allowed to show.\n   *\n   * @memberof ToastPersistConfig\n   * @default 1\n   */\n  count? = 1;\n\n  enabled = false;\n}\n\nexport type AddToastRef = Omit<Omit<HotToastRefProps, 'close'>, 'getToast'>;\n\nexport type CreateHotToastRef = Omit<Omit<HotToastRefProps, 'appendTo'>, 'dispose'>;\n","export const animate = (element: HTMLElement, value: string) => {\n  element.style.animation = value;\n};\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { CreateHotToastRef, HotToastClose, Toast, ToastConfig } from '../../hot-toast.model';\nimport { animate } from '../../utils';\n\n@Component({\n  selector: 'hot-toast',\n  templateUrl: 'hot-toast.component.html',\n  styleUrls: ['./hot-toast.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HotToastComponent implements AfterViewInit, OnDestroy {\n  @Input() toast: Toast;\n  @Input() offset = 0;\n  @Input() defaultConfig: ToastConfig;\n  @Input() toastRef: CreateHotToastRef;\n\n  @Output() height = new EventEmitter<number>();\n  @Output() beforeClosed = new EventEmitter();\n  @Output() afterClosed = new EventEmitter<HotToastClose>();\n\n  @ViewChild('hotToastBarBase') private toastBarBase: ElementRef<HTMLElement>;\n\n  isManualClose = false;\n\n  ngAfterViewInit() {\n    const nativeElement = this.toastBarBase.nativeElement;\n    this.height.emit(nativeElement.offsetHeight);\n\n    nativeElement.addEventListener('animationstart', (ev: AnimationEvent) => {\n      if (this.isExitAnimation(ev)) {\n        this.beforeClosed.emit();\n      }\n    });\n    nativeElement.addEventListener('animationend', (ev: AnimationEvent) => {\n      if (this.isExitAnimation(ev)) {\n        this.afterClosed.emit({ dismissedByAction: this.isManualClose, id: this.toast.id });\n      }\n    });\n  }\n\n  getPositionStyle() {\n    const top = this.toast.position.includes('top');\n    const verticalStyle = top ? { top: 0 } : { bottom: 0 };\n\n    const horizontalStyle = this.toast.position.includes('left')\n      ? {\n          left: 0,\n        }\n      : this.toast.position.includes('right')\n      ? {\n          right: 0,\n        }\n      : {\n          left: 0,\n          right: 0,\n          justifyContent: 'center',\n        };\n    return {\n      transform: `translateY(${this.offset * (top ? 1 : -1)}px)`,\n      ...verticalStyle,\n      ...horizontalStyle,\n    };\n  }\n\n  getToastBarContainerClasses() {\n    return (this.toast.className ?? ' ') + this.toast.theme;\n  }\n\n  get toastBarBaseStyles() {\n    const top = this.toast.position.includes('top');\n\n    const enterAnimation = `hotToastEnterAnimation${\n      top ? 'Negative' : 'Positive'\n    } 0.35s cubic-bezier(0.21, 1.02, 0.73, 1) forwards`;\n\n    const exitAnimation = `hotToastExitAnimation${\n      top ? 'Negative' : 'Positive'\n    } 0.8s forwards cubic-bezier(0.06, 0.71, 0.55, 1) ${this.toast.duration}ms`;\n\n    const animation = this.toast.autoClose ? `${enterAnimation}, ${exitAnimation}` : enterAnimation;\n\n    return { ...this.toast.style, animation };\n  }\n\n  close() {\n    this.isManualClose = true;\n    const top = this.toast.position.includes('top');\n\n    const exitAnimation = `hotToastExitAnimation${\n      top ? 'Negative' : 'Positive'\n    } 0.8s forwards cubic-bezier(0.06, 0.71, 0.55, 1)`;\n\n    const nativeElement = this.toastBarBase.nativeElement;\n\n    animate(nativeElement, exitAnimation);\n  }\n\n  get isIconString() {\n    return typeof this.toast.icon === 'string';\n  }\n\n  get isMessageString() {\n    return typeof this.toast.message === 'string';\n  }\n\n  ngOnDestroy() {\n    this.close();\n  }\n\n  private isExitAnimation(ev: AnimationEvent) {\n    return ev.animationName.includes('hotToastExitAnimation');\n  }\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Input, OnDestroy, QueryList, ViewChildren } from '@angular/core';\nimport { Component } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport { HOT_TOAST_DEFAULT_TIMEOUTS } from '../../constants';\nimport {\n  DefaultToastOptions,\n  HotToastClose,\n  resolveValueOrFunction,\n  Toast,\n  ToastConfig,\n  ToastPosition,\n  UpdateToastOptions,\n  AddToastRef,\n  CreateHotToastRef,\n} from '../../hot-toast.model';\nimport { HotToastRef } from '../../hot-toast-ref';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Content } from '@ngneat/overview';\nimport { HotToastComponent } from '../hot-toast/hot-toast.component';\n\n@Component({\n  selector: 'hot-toast-container',\n  templateUrl: './hot-toast-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HotToastContainerComponent implements OnDestroy {\n  @Input() defaultConfig: ToastConfig;\n\n  @ViewChildren(HotToastComponent) hotToastComponentList: QueryList<HotToastComponent>;\n\n  toasts: Toast[] = [];\n  toastRefs: CreateHotToastRef[] = [];\n\n  private readonly _offsetMargin = 8;\n\n  private subscriptionList: Subscription[] = [];\n\n  /** Subject for notifying the user that the toast has been closed. */\n  private _onClosed = new Subject<HotToastClose>();\n\n  private onClosed$ = this._onClosed.asObservable();\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  trackById(index: number, toast: Toast) {\n    return toast.id;\n  }\n\n  calculateOffset(toastId: string, position: ToastPosition) {\n    const visibleToasts = this.toasts.filter((t) => t.visible && t.position === position);\n    const index = visibleToasts.findIndex((toast) => toast.id === toastId);\n    const offset =\n      index !== -1\n        ? visibleToasts\n            .slice(...(this.defaultConfig.reverseOrder ? [index + 1] : [0, index]))\n            .reduce((acc, t) => acc + (t.height || 0) + this._offsetMargin, 0)\n        : 0;\n    return offset;\n  }\n\n  updateHeight(height: number, toast: Toast) {\n    toast.height = height;\n  }\n\n  addToast(ref: HotToastRef): AddToastRef {\n    this.toastRefs.push(ref);\n\n    let toast = ref.getToast();\n    let subscription: Subscription;\n\n    this.toasts.push(ref.getToast());\n\n    this.cdr.detectChanges();\n\n    if (toast.observable) {\n      ({ toast, subscription } = this.updateSubscription(toast, subscription));\n      this.subscriptionList.push(subscription);\n    }\n\n    return {\n      dispose: () => {\n        if (subscription) {\n          subscription.unsubscribe();\n        }\n\n        this.closeToast(toast.id);\n      },\n      updateMessage: (message: Content) => {\n        toast.message = message;\n        this.cdr.detectChanges();\n      },\n      updateToast: (options: UpdateToastOptions) => {\n        this.updateToasts(toast, options);\n        this.cdr.detectChanges();\n      },\n      afterClosed: this.getAfterClosed(toast),\n    };\n  }\n\n  closeToast(id: string) {\n    const comp = this.hotToastComponentList.find((item) => item.toast.id === id);\n    if (comp) {\n      comp.close();\n    }\n  }\n\n  beforeClosed(toast: Toast) {\n    toast.visible = false;\n  }\n\n  afterClosed(closeToast: HotToastClose) {\n    const toastIndex = this.toasts.findIndex((t) => t.id === closeToast.id);\n    if (toastIndex > -1) {\n      this._onClosed.next(closeToast);\n      this.toasts = this.toasts.filter((t) => t.id !== closeToast.id);\n      this.toastRefs = this.toastRefs.filter((t) => t.getToast().id !== closeToast.id);\n      this.cdr.detectChanges();\n    }\n  }\n\n  hasToast(id: string) {\n    return this.toasts.findIndex((t) => t.id === id) > -1;\n  }\n\n  ngOnDestroy() {\n    this.subscriptionList.forEach((s) => s.unsubscribe());\n  }\n\n  private updateSubscription(toast: Toast, subscription: Subscription) {\n    subscription = toast.observable.pipe(takeUntil(this.getAfterClosed(toast))).subscribe(\n      (v) => {\n        if (toast.observableMessages?.next) {\n          toast.message = resolveValueOrFunction(toast.observableMessages.next, v);\n          toast = Object.assign(toast, {\n            ...toast,\n            type: 'success',\n            duration: HOT_TOAST_DEFAULT_TIMEOUTS.success,\n            ...this.defaultConfig?.success,\n            ...(toast as DefaultToastOptions)?.success,\n          });\n          this.updateToasts(toast);\n          this.cdr.detectChanges();\n        }\n      },\n      (e) => {\n        if (toast.observableMessages?.error) {\n          toast.message = resolveValueOrFunction(toast.observableMessages.error, e);\n          toast = Object.assign(toast, {\n            ...toast,\n            type: 'error',\n            duration: HOT_TOAST_DEFAULT_TIMEOUTS.error,\n            ...this.defaultConfig?.error,\n            ...(toast as DefaultToastOptions)?.error,\n          });\n          this.updateToasts(toast);\n          this.cdr.detectChanges();\n        }\n      }\n    );\n    return { toast, subscription };\n  }\n\n  private getAfterClosed(toast: Toast) {\n    return this.onClosed$.pipe(filter((v) => v.id === toast.id));\n  }\n\n  private updateToasts(toast: Toast, options?: UpdateToastOptions) {\n    this.toasts = this.toasts.map((t) => ({ ...t, ...(t.id === toast.id && { ...toast, ...options }) }));\n  }\n}\n","import { Content } from '@ngneat/overview';\nimport { Observable, race, Subject } from 'rxjs';\nimport { HotToastContainerComponent } from './components/hot-toast-container/hot-toast-container.component';\nimport { HotToastClose, Toast, UpdateToastOptions, HotToastRefProps } from './hot-toast.model';\n\nexport class HotToastRef implements HotToastRefProps {\n  updateMessage: (message: Content) => void;\n  updateToast: (options: UpdateToastOptions) => void;\n  afterClosed: Observable<HotToastClose>;\n\n  private _dispose: () => void;\n  set dispose(value: () => void) {\n    this._dispose = value;\n  }\n\n  /** Subject for notifying the user that the toast has been closed. */\n  private _onClosed = new Subject<HotToastClose>();\n\n  constructor(private toast: Toast) {}\n\n  getToast() {\n    return this.toast;\n  }\n\n  /**Used for internal purpose\n   * Attach ToastRef to container\n   */\n  appendTo(container: HotToastContainerComponent) {\n    const { dispose, updateMessage, updateToast, afterClosed } = container.addToast(this);\n\n    this.dispose = dispose;\n    this.updateMessage = updateMessage;\n    this.updateToast = updateToast;\n    this.afterClosed = race(this._onClosed.asObservable(), afterClosed);\n    return this;\n  }\n\n  /**\n   * Closes the toast\n   *\n   * @param [closeData={ dismissedByAction: false }] -\n   * Make sure to pass { dismissedByAction: true } when closing from template\n   * @memberof HotToastRef\n   */\n  close(closeData: { dismissedByAction: boolean } = { dismissedByAction: false }) {\n    this._dispose();\n    this._onClosed.next({ dismissedByAction: closeData.dismissedByAction, id: this.toast.id });\n    this._onClosed.complete();\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { Content, ViewService } from '@ngneat/overview';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { HotToastContainerComponent } from './components/hot-toast-container/hot-toast-container.component';\nimport { HOT_TOAST_DEFAULT_TIMEOUTS } from './constants';\nimport { HotToastRef } from './hot-toast-ref';\nimport {\n  CreateHotToastRef,\n  DefaultToastOptions,\n  HotToastServiceMethods,\n  ObservableMessages,\n  resolveValueOrFunction,\n  Toast,\n  ToastConfig,\n  ToastOptions,\n  ToastPersistConfig,\n  ToastType,\n  UpdateToastOptions,\n} from './hot-toast.model';\n\n@Injectable({ providedIn: 'root' })\nexport class HotToastService implements HotToastServiceMethods {\n  componentInstance: HotToastContainerComponent;\n\n  private _defaultConfig = new ToastConfig();\n  private _defaultPersistConfig = new ToastPersistConfig();\n\n  constructor(private _viewService: ViewService, @Optional() config: ToastConfig) {\n    if (config) {\n      this._defaultConfig = {\n        ...this._defaultConfig,\n        ...config,\n      };\n    }\n  }\n\n  /**\n   * Used for internal purpose only.\n   * Creates a container component and attaches it to document.body.\n   */\n  init() {\n    const componentRef = this._viewService\n      .createComponent(HotToastContainerComponent)\n      .setInput('defaultConfig', this._defaultConfig)\n      .appendTo(this._defaultConfig.windowRef.document.body);\n\n    this.componentInstance = componentRef.ref.instance;\n  }\n\n  /**\n   * Opens up an hot-toast without any pre-configurations\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  show(message: Content, options?: ToastOptions): CreateHotToastRef {\n    const toast = this.createToast(message, 'blank', { ...this._defaultConfig, ...options });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for error state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  error(message: Content, options?: ToastOptions): CreateHotToastRef {\n    const toast = this.createToast(message, 'error', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.error,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for success state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  success(message: Content, options?: ToastOptions): CreateHotToastRef {\n    const toast = this.createToast(message, 'success', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.success,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for loading state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  loading(message: Content, options?: ToastOptions): CreateHotToastRef {\n    const toast = this.createToast(message, 'loading', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.loading,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   * Opens up an hot-toast with pre-configurations for warning state\n   *\n   * @param message The message to show in the hot-toast.\n   * @param [options] Additional configuration options for the hot-toast.\n   * @returns\n   * @memberof HotToastService\n   */\n  warning(message: Content, options?: ToastOptions): CreateHotToastRef {\n    const toast = this.createToast(message, 'warning', {\n      ...this._defaultConfig,\n      ...this._defaultConfig?.warning,\n      ...options,\n    });\n\n    return toast;\n  }\n\n  /**\n   *\n   *  Opens up an hot-toast with pre-configurations for loading initially and then changes state based on messages\n   *\n   * @template T T\n   * @param messages Messages for each state i.e. loading, next and error\n   * @param [options] Additional configuration options for the hot-toast.\n   * @param observable Observable to which subscription will happen and messages will be displayed according to messages\n   * @returns\n   * @memberof HotToastService\n   */\n  observe<T>(messages: ObservableMessages<T>, options?: DefaultToastOptions): (source: Observable<T>) => Observable<T> {\n    return (source) => {\n      let toastRef: CreateHotToastRef;\n      if (messages.loading) {\n        toastRef = this.createToast(messages.loading, 'loading', {\n          ...this._defaultConfig,\n          ...this._defaultConfig?.loading,\n          ...options,\n          ...options?.loading,\n        });\n      }\n\n      return source.pipe(\n        tap({\n          next: (val) => {\n            if (messages.next) {\n              toastRef = this.createOrUpdateToast(messages, val, toastRef, options, 'success');\n            }\n          },\n          error: (e) => {\n            if (messages.error) {\n              toastRef = this.createOrUpdateToast(messages, e, toastRef, options, 'error');\n            }\n          },\n        })\n      );\n    };\n  }\n\n  /**\n   * Closes the hot-toast\n   *\n   * @param id - ID of the toast\n   */\n  close(id: string) {\n    this.componentInstance.closeToast(id);\n  }\n\n  private createOrUpdateToast<T>(\n    messages: ObservableMessages<T>,\n    val: unknown,\n    toastRef: CreateHotToastRef,\n    options: DefaultToastOptions,\n    type: ToastType\n  ) {\n    const message = resolveValueOrFunction(messages[type === 'success' ? 'next' : 'error'], val);\n    if (toastRef) {\n      toastRef.updateMessage(message);\n      const updatedOptions: UpdateToastOptions = {\n        ...toastRef.getToast(),\n        type,\n        duration: HOT_TOAST_DEFAULT_TIMEOUTS[type],\n        ...(this._defaultConfig[type] ?? undefined),\n        ...((toastRef.getToast() as DefaultToastOptions)[type] ?? {}),\n      };\n      toastRef.updateToast(updatedOptions);\n    } else {\n      const newOptions = {\n        ...this._defaultConfig,\n        ...(this._defaultConfig[type] ?? undefined),\n        ...options,\n        ...(options && options[type] ? options[type] : undefined),\n      };\n      this.createToast(message, type, newOptions);\n    }\n    return toastRef;\n  }\n\n  private createToast<T>(\n    message: Content,\n    type: ToastType,\n    options?: DefaultToastOptions,\n    observable?: Observable<T>,\n    observableMessages?: ObservableMessages<T>\n  ): CreateHotToastRef {\n    const now = Date.now();\n\n    const id = options?.id ?? now.toString();\n\n    if (!this.isDuplicate(id) && this.createStorage(id, options)) {\n      const toast: Toast = {\n        ariaLive: options?.ariaLive ?? 'polite',\n        createdAt: now,\n        duration: options?.duration ?? HOT_TOAST_DEFAULT_TIMEOUTS[type],\n        id,\n        message,\n        role: options?.role ?? 'status',\n        type,\n        visible: true,\n        observable: observable ?? undefined,\n        observableMessages: observableMessages ?? undefined,\n        ...options,\n      };\n\n      return new HotToastRef(toast).appendTo(this.componentInstance);\n    }\n  }\n\n  private isDuplicate(id: string) {\n    return this.componentInstance.hasToast(id);\n  }\n\n  /**\n   * Creates an entry in local or session storage with count ${defaultConfig.persist.count}, if not present.\n   * If present in storage, reduces the count\n   * and returns the count.\n   * Count can not be less than 0.\n   */\n  private createStorage(id: string, options: DefaultToastOptions): number {\n    let count = 1;\n    if (options.persist?.enabled) {\n      const persist = { ...this._defaultPersistConfig, ...options.persist };\n      const storage: Storage = persist.storage === 'local' ? localStorage : sessionStorage;\n      const key = persist.key.replace(/\\${id}/g, id);\n\n      let item: string | number = storage.getItem(key);\n\n      if (item) {\n        item = parseInt(item, 10);\n        if (item > 0) {\n          count = item - 1;\n        } else {\n          count = item;\n        }\n      } else {\n        count = persist.count;\n      }\n\n      storage.setItem(key, count.toString());\n    }\n\n    return count;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-animated-icon',\n  templateUrl: './animated-icon.component.html',\n  styleUrls: ['./animated-icon.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AnimatedIconComponent {\n  @Input() iconTheme: IconTheme;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-checkmark',\n  templateUrl: './checkmark.component.html',\n  styleUrls: ['./checkmark.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckMarkComponent {\n  @Input() theme: IconTheme;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ErrorComponent {\n  @Input() theme: IconTheme;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LoaderComponent {\n  @Input() theme: IconTheme;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme, ToastType } from '../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-indicator',\n  templateUrl: 'indicator.component.html',\n  styleUrls: ['./indicator.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class IndicatorComponent {\n  @Input() theme: IconTheme;\n  @Input() type: ToastType;\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { IconTheme } from '../../../../hot-toast.model';\n\n@Component({\n  selector: 'hot-toast-warning',\n  templateUrl: './warning.component.html',\n  styleUrls: ['./warning.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WarningComponent {\n  @Input() theme: IconTheme;\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { DynamicContentModule } from '@ngneat/overview';\n\nimport { AnimatedIconComponent } from './components/animated-icon/animated-icon.component';\nimport { HotToastComponent } from './components/hot-toast/hot-toast.component';\nimport { CheckMarkComponent } from './components/indicator/icons/checkmark/checkmark.component';\nimport { ErrorComponent } from './components/indicator/icons/error/error.component';\nimport { LoaderComponent } from './components/indicator/icons/loader/loader.component';\nimport { IndicatorComponent } from './components/indicator/indicator.component';\nimport { ToastConfig } from './hot-toast.model';\nimport { HotToastContainerComponent } from './components/hot-toast-container/hot-toast-container.component';\nimport { HotToastService } from './hot-toast.service';\nimport { WarningComponent } from './components/indicator/icons/warning/warning.component';\n\n@NgModule({\n  declarations: [\n    HotToastContainerComponent,\n    HotToastComponent,\n    AnimatedIconComponent,\n    IndicatorComponent,\n    CheckMarkComponent,\n    ErrorComponent,\n    LoaderComponent,\n    WarningComponent,\n  ],\n  imports: [CommonModule, DynamicContentModule],\n})\nexport class HotToastModule {\n  constructor(service: HotToastService) {\n    service.init();\n  }\n\n  static forRoot(config?: Partial<ToastConfig>): ModuleWithProviders<HotToastModule> {\n    return {\n      ngModule: HotToastModule,\n      providers: [{ provide: ToastConfig, useValue: config }],\n    };\n  }\n}\n","/*\n * Public API Surface of hot-toast\n */\n\nexport * from './lib/hot-toast.service';\nexport * from './lib/hot-toast.module';\nexport * from './lib/hot-toast.model';\nexport * from './lib/hot-toast-ref';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AnimatedIconComponent as ɵc} from './lib/components/animated-icon/animated-icon.component';\nexport {HotToastContainerComponent as ɵa} from './lib/components/hot-toast-container/hot-toast-container.component';\nexport {HotToastComponent as ɵb} from './lib/components/hot-toast/hot-toast.component';\nexport {CheckMarkComponent as ɵe} from './lib/components/indicator/icons/checkmark/checkmark.component';\nexport {ErrorComponent as ɵf} from './lib/components/indicator/icons/error/error.component';\nexport {LoaderComponent as ɵg} from './lib/components/indicator/icons/loader/loader.component';\nexport {WarningComponent as ɵh} from './lib/components/indicator/icons/warning/warning.component';\nexport {IndicatorComponent as ɵd} from './lib/components/indicator/indicator.component';"],"names":[],"mappings":"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"}